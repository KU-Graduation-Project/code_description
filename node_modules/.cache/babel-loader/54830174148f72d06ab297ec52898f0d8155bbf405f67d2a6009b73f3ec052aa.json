{"ast":null,"code":"// const express = require('express');\n// const path = require('path');\n// const app = express();\n// const http = require('http');\nconst port = 8080;\n\n// const http = require('http').createServer(app);\n\n// http.listen(port, () => {\n//   console.log(`Listening on http://localhost:${port}`);\n// });\n\n// --!  Express + WebSocket\n// app.get('/', (req, res) => {\n//     res.send('hello world');\n// });\n\n// const server = http.createServer(app).listen(8080, () => {\n//     console.log(\"Express server listening\");\n// });\n\n// const WebSocket = require('ws');\n// const ws = new WebSocket.Server({ server });\n\n// ws.on('connection', (socket) => {\n//     console.log(\"Connected to Browser\");\n//     // socket.on('close', () => {\n//     //     console.log(\"Disconnected from the browser\");\n//     // });\n//     socket.on('message', (msg) => {\n//         console.log(\"receive from client: \", JSON.parse(msg))\n//         socket.send(\"send to client: echo \" + JSON.parse(msg)) // python 으로 데이터 보낸다, python에서 data 변수에 들어감\n//     });\n// });\n\n// --! Only WebSocket\nconst WebSocket = require('ws');\nconst ws = new WebSocket.Server({\n  port: 8080\n});\nws.on('connection', socket => {\n  console.log(\"Connected to Browser\");\n  // socket.on('close', () => {\n  //     console.log(\"Disconnected from the browser\");\n  // });\n  socket.on('message', msg => {\n    console.log(\"receive from client: \", JSON.parse(msg));\n    socket.send(\"send to client: echo \" + JSON.parse(msg)); // python 으로 데이터 보낸다, python에서 data 변수에 들어감\n\n    let data = JSON.parse(msg);\n    let ur = data.user;\n    let hr = data.heartrate;\n    let rp = data.resp;\n    let tp = data.temp;\n    console.log(ur);\n    console.log(hr);\n    console.log(rp);\n    console.log(tp);\n    module.exports = {\n      ur,\n      hr,\n      rp,\n      tp\n    };\n  });\n});\n// let num1 = 5;\n// let num2 = 20;\n// let num3 = 50;\n\n// export { num1, num2, num3 }","map":{"version":3,"names":["port","WebSocket","require","ws","Server","on","socket","console","log","msg","JSON","parse","send","data","ur","user","hr","heartrate","rp","resp","tp","temp","module","exports"],"sources":["C:/Users/user/Downloads/hpe-example-main/hpe-example-main/my-app/src/serve/serve.js"],"sourcesContent":["// const express = require('express');\n// const path = require('path');\n// const app = express();\n// const http = require('http');\nconst port = 8080;\n\n// const http = require('http').createServer(app);\n\n// http.listen(port, () => {\n//   console.log(`Listening on http://localhost:${port}`);\n// });\n\n// --!  Express + WebSocket\n// app.get('/', (req, res) => {\n//     res.send('hello world');\n// });\n\n// const server = http.createServer(app).listen(8080, () => {\n//     console.log(\"Express server listening\");\n// });\n\n// const WebSocket = require('ws');\n// const ws = new WebSocket.Server({ server });\n\n// ws.on('connection', (socket) => {\n//     console.log(\"Connected to Browser\");\n//     // socket.on('close', () => {\n//     //     console.log(\"Disconnected from the browser\");\n//     // });\n//     socket.on('message', (msg) => {\n//         console.log(\"receive from client: \", JSON.parse(msg))\n//         socket.send(\"send to client: echo \" + JSON.parse(msg)) // python 으로 데이터 보낸다, python에서 data 변수에 들어감\n//     });\n// });\n\n// --! Only WebSocket\nconst WebSocket = require('ws');\nconst ws = new WebSocket.Server({ port:8080 });\n\nws.on('connection', (socket) => {\n    console.log(\"Connected to Browser\");\n    // socket.on('close', () => {\n    //     console.log(\"Disconnected from the browser\");\n    // });\n    socket.on('message', (msg) => {\n        console.log(\"receive from client: \", JSON.parse(msg))\n        socket.send(\"send to client: echo \" + JSON.parse(msg)) // python 으로 데이터 보낸다, python에서 data 변수에 들어감\n        \n        let data = JSON.parse(msg)\n        let ur = data.user\n        let hr = data.heartrate\n        let rp = data.resp\n        let tp = data.temp\n    \n        console.log(ur)\n        console.log(hr)\n        console.log(rp)\n        console.log(tp)\n        \n        module.exports = {\n            ur, hr, rp, tp\n        };\n    \n    });\n});\n// let num1 = 5;\n// let num2 = 20;\n// let num3 = 50;\n\n// export { num1, num2, num3 }"],"mappings":"AAAA;AACA;AACA;AACA;AACA,MAAMA,IAAI,GAAG,IAAI;;AAEjB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAMC,SAAS,GAAGC,OAAO,CAAC,IAAI,CAAC;AAC/B,MAAMC,EAAE,GAAG,IAAIF,SAAS,CAACG,MAAM,CAAC;EAAEJ,IAAI,EAAC;AAAK,CAAC,CAAC;AAE9CG,EAAE,CAACE,EAAE,CAAC,YAAY,EAAGC,MAAM,IAAK;EAC5BC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;EACnC;EACA;EACA;EACAF,MAAM,CAACD,EAAE,CAAC,SAAS,EAAGI,GAAG,IAAK;IAC1BF,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEE,IAAI,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;IACrDH,MAAM,CAACM,IAAI,CAAC,uBAAuB,GAAGF,IAAI,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC,EAAC;;IAEvD,IAAII,IAAI,GAAGH,IAAI,CAACC,KAAK,CAACF,GAAG,CAAC;IAC1B,IAAIK,EAAE,GAAGD,IAAI,CAACE,IAAI;IAClB,IAAIC,EAAE,GAAGH,IAAI,CAACI,SAAS;IACvB,IAAIC,EAAE,GAAGL,IAAI,CAACM,IAAI;IAClB,IAAIC,EAAE,GAAGP,IAAI,CAACQ,IAAI;IAElBd,OAAO,CAACC,GAAG,CAACM,EAAE,CAAC;IACfP,OAAO,CAACC,GAAG,CAACQ,EAAE,CAAC;IACfT,OAAO,CAACC,GAAG,CAACU,EAAE,CAAC;IACfX,OAAO,CAACC,GAAG,CAACY,EAAE,CAAC;IAEfE,MAAM,CAACC,OAAO,GAAG;MACbT,EAAE;MAAEE,EAAE;MAAEE,EAAE;MAAEE;IAChB,CAAC;EAEL,CAAC,CAAC;AACN,CAAC,CAAC;AACF;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}