{"ast":null,"code":"const app = require('express')();\nconst server = require('http').createServer(app);\nconst io = require('socket.io')(server);\nio.on('connection', socket => {\n  socket.on('message', msg => {\n    console.log(msg);\n    console.log(\"receive from client: \", JSON.parse(msg));\n    ws.send(\"send to client: echo \", JSON.parse(msg)); // python 으로 데이터 보낸다, python에서 data 변수에 들어감\n\n    let data = JSON.parse(msg);\n    let ur = data.user;\n    let hr = data.heartrate;\n    let rp = data.resp;\n    let tp = data.temp;\n    console.log(ur);\n    console.log(hr);\n    console.log(rp);\n    console.log(tp);\n  });\n});\nserver.listen(8080);\n\n// // Require HTTP module (to start server) and Socket.IO\n// var http = require('http');\n// io = require('socket.io');\n\n// // Start the server at port 8080\n// let express = require('express')\n// const app = express()\n// const server = http.createServer(app)\n// // var server = http.createServer(function(req, res){ \n//     // Send HTML headers and message\n//     // res.writeHead(200,{ 'Content-Type': 'text/html' }); \n//     // res.end('<h1>Hello Socket Lover!</h1>');\n// // });\n// server.listen(8080);\n\n// // Create a Socket.IO instance, passing it our server\n// var socket = io(server);\n\n// // Add a connect listener\n// socket.on('connection', function(client){ \n//     // Success!  Now listen to messages to be received\n//     // client.on('message', msg => {\n//     //             console.log(\"receive from client: \", JSON.parse(msg))\n//     //             ws.send(\"send to client: echo \", JSON.parse(msg)) // python 으로 데이터 보낸다, python에서 data 변수에 들어감\n\n//     //             let data = JSON.parse(msg)\n//     //             let ur = data.user\n//     //             let hr = data.heartrate\n//     //             let rp = data.resp\n//     //             let tp = data.temp\n\n//     //             console.log(ur)\n//     //             console.log(hr)\n//     //             console.log(rp)\n//     //             console.log(tp)\n\n//     //             // module.exports = {\n//     //             //     ur, hr, rp, tp\n//     //             // };\n\n//     //         });\n//     client.on('message', msg => { \n//         console.log('Received message from client!',JSON.parse(msg));\n//         let data = JSON.parse(msg)\n//         let ur = data.user\n//         let hr = data.heartrate\n//         let rp = data.resp\n//         let tp = data.temp\n\n//         console.log(ur)\n//         console.log(hr)\n//         console.log(rp)\n//         console.log(tp)\n//     });\n//     // client.on('disconnect',function(){\n//     //     clearInterval(interval);\n//     //     console.log('Server has disconnected');\n//     // });\n\n// });\n\n// // const WebSocket = require('ws');\n// // const wss = new WebSocket.Server({ port:8080 });\n\n// // wss.on('connection', ws => {\n// //     ws.on('message', msg => {\n// //         console.log(\"receive from client: \", JSON.parse(msg))\n// //         ws.send(\"send to client: echo \", JSON.parse(msg)) // python 으로 데이터 보낸다, python에서 data 변수에 들어감\n\n// //         let data = JSON.parse(msg)\n// //         let ur = data.user\n// //         let hr = data.heartrate\n// //         let rp = data.resp\n// //         let tp = data.temp\n\n// //         console.log(ur)\n// //         console.log(hr)\n// //         console.log(rp)\n// //         console.log(tp)\n\n// //         // module.exports = {\n// //         //     ur, hr, rp, tp\n// //         // };\n\n// //     });\n// // });","map":{"version":3,"names":["app","require","server","createServer","io","on","socket","msg","console","log","JSON","parse","ws","send","data","ur","user","hr","heartrate","rp","resp","tp","temp","listen"],"sources":["C:/Users/user/Downloads/hpe-example-main/hpe-example-main/my-app/src/Components/detail/server.js"],"sourcesContent":["const app = require('express')()\r\nconst server = require('http').createServer(app)\r\nconst io = require('socket.io')(server)\r\n\r\nio.on('connection', socket => {\r\n    socket.on('message', msg => {\r\n        console.log(msg)\r\n        console.log(\"receive from client: \", JSON.parse(msg))\r\n        ws.send(\"send to client: echo \", JSON.parse(msg)) // python 으로 데이터 보낸다, python에서 data 변수에 들어감\r\n    \r\n        let data = JSON.parse(msg)\r\n        let ur = data.user\r\n        let hr = data.heartrate\r\n        let rp = data.resp\r\n        let tp = data.temp\r\n    \r\n        console.log(ur)\r\n        console.log(hr)\r\n        console.log(rp)\r\n        console.log(tp)\r\n    })\r\n})\r\nserver.listen(8080)\r\n\r\n// // Require HTTP module (to start server) and Socket.IO\r\n// var http = require('http');\r\n// io = require('socket.io');\r\n\r\n// // Start the server at port 8080\r\n// let express = require('express')\r\n// const app = express()\r\n// const server = http.createServer(app)\r\n// // var server = http.createServer(function(req, res){ \r\n//     // Send HTML headers and message\r\n//     // res.writeHead(200,{ 'Content-Type': 'text/html' }); \r\n//     // res.end('<h1>Hello Socket Lover!</h1>');\r\n// // });\r\n// server.listen(8080);\r\n\r\n// // Create a Socket.IO instance, passing it our server\r\n// var socket = io(server);\r\n\r\n// // Add a connect listener\r\n// socket.on('connection', function(client){ \r\n//     // Success!  Now listen to messages to be received\r\n//     // client.on('message', msg => {\r\n//     //             console.log(\"receive from client: \", JSON.parse(msg))\r\n//     //             ws.send(\"send to client: echo \", JSON.parse(msg)) // python 으로 데이터 보낸다, python에서 data 변수에 들어감\r\n            \r\n//     //             let data = JSON.parse(msg)\r\n//     //             let ur = data.user\r\n//     //             let hr = data.heartrate\r\n//     //             let rp = data.resp\r\n//     //             let tp = data.temp\r\n            \r\n//     //             console.log(ur)\r\n//     //             console.log(hr)\r\n//     //             console.log(rp)\r\n//     //             console.log(tp)\r\n                \r\n//     //             // module.exports = {\r\n//     //             //     ur, hr, rp, tp\r\n//     //             // };\r\n            \r\n//     //         });\r\n//     client.on('message', msg => { \r\n//         console.log('Received message from client!',JSON.parse(msg));\r\n//         let data = JSON.parse(msg)\r\n//         let ur = data.user\r\n//         let hr = data.heartrate\r\n//         let rp = data.resp\r\n//         let tp = data.temp\r\n    \r\n//         console.log(ur)\r\n//         console.log(hr)\r\n//         console.log(rp)\r\n//         console.log(tp)\r\n//     });\r\n//     // client.on('disconnect',function(){\r\n//     //     clearInterval(interval);\r\n//     //     console.log('Server has disconnected');\r\n//     // });\r\n\r\n// });\r\n\r\n// // const WebSocket = require('ws');\r\n// // const wss = new WebSocket.Server({ port:8080 });\r\n\r\n// // wss.on('connection', ws => {\r\n// //     ws.on('message', msg => {\r\n// //         console.log(\"receive from client: \", JSON.parse(msg))\r\n// //         ws.send(\"send to client: echo \", JSON.parse(msg)) // python 으로 데이터 보낸다, python에서 data 변수에 들어감\r\n    \r\n// //         let data = JSON.parse(msg)\r\n// //         let ur = data.user\r\n// //         let hr = data.heartrate\r\n// //         let rp = data.resp\r\n// //         let tp = data.temp\r\n    \r\n// //         console.log(ur)\r\n// //         console.log(hr)\r\n// //         console.log(rp)\r\n// //         console.log(tp)\r\n        \r\n// //         // module.exports = {\r\n// //         //     ur, hr, rp, tp\r\n// //         // };\r\n    \r\n// //     });\r\n// // });"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,SAAS,CAAC,EAAE;AAChC,MAAMC,MAAM,GAAGD,OAAO,CAAC,MAAM,CAAC,CAACE,YAAY,CAACH,GAAG,CAAC;AAChD,MAAMI,EAAE,GAAGH,OAAO,CAAC,WAAW,CAAC,CAACC,MAAM,CAAC;AAEvCE,EAAE,CAACC,EAAE,CAAC,YAAY,EAAEC,MAAM,IAAI;EAC1BA,MAAM,CAACD,EAAE,CAAC,SAAS,EAAEE,GAAG,IAAI;IACxBC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAChBC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEC,IAAI,CAACC,KAAK,CAACJ,GAAG,CAAC,CAAC;IACrDK,EAAE,CAACC,IAAI,CAAC,uBAAuB,EAAEH,IAAI,CAACC,KAAK,CAACJ,GAAG,CAAC,CAAC,EAAC;;IAElD,IAAIO,IAAI,GAAGJ,IAAI,CAACC,KAAK,CAACJ,GAAG,CAAC;IAC1B,IAAIQ,EAAE,GAAGD,IAAI,CAACE,IAAI;IAClB,IAAIC,EAAE,GAAGH,IAAI,CAACI,SAAS;IACvB,IAAIC,EAAE,GAAGL,IAAI,CAACM,IAAI;IAClB,IAAIC,EAAE,GAAGP,IAAI,CAACQ,IAAI;IAElBd,OAAO,CAACC,GAAG,CAACM,EAAE,CAAC;IACfP,OAAO,CAACC,GAAG,CAACQ,EAAE,CAAC;IACfT,OAAO,CAACC,GAAG,CAACU,EAAE,CAAC;IACfX,OAAO,CAACC,GAAG,CAACY,EAAE,CAAC;EACnB,CAAC,CAAC;AACN,CAAC,CAAC;AACFnB,MAAM,CAACqB,MAAM,CAAC,IAAI,CAAC;;AAEnB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}