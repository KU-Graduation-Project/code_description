{"ast":null,"code":"// const app = require('express')()\n// const server = require('http').createServer(app)\n// const io = require('socket.io')(server)\n\n// io.on('connection', socket => {\n//     socket.on('message', msg => {\n//         console.log(msg)\n//         console.log(\"receive from client: \", JSON.parse(msg))\n//         ws.send(\"send to client: echo \", JSON.parse(msg)) // python 으로 데이터 보낸다, python에서 data 변수에 들어감\n\n//         let data = JSON.parse(msg)\n//         let ur = data.user\n//         let hr = data.heartrate\n//         let rp = data.resp\n//         let tp = data.temp\n\n//         console.log(ur)\n//         console.log(hr)\n//         console.log(rp)\n//         console.log(tp)\n//     })\n// })\n// server.listen(8080)\n\n// // Require HTTP module (to start server) and Socket.IO\n// var http = require('http');\n// io = require('socket.io');\n\n// // Start the server at port 8080\n// let express = require('express')\n// const app = express()\n// const server = http.createServer(app)\n// // var server = http.createServer(function(req, res){ \n//     // Send HTML headers and message\n//     // res.writeHead(200,{ 'Content-Type': 'text/html' }); \n//     // res.end('<h1>Hello Socket Lover!</h1>');\n// // });\n// server.listen(8080);\n\n// // Create a Socket.IO instance, passing it our server\n// var socket = io(server);\n\n// // Add a connect listener\n// socket.on('connection', function(client){ \n//     // Success!  Now listen to messages to be received\n//     // client.on('message', msg => {\n//     //             console.log(\"receive from client: \", JSON.parse(msg))\n//     //             ws.send(\"send to client: echo \", JSON.parse(msg)) // python 으로 데이터 보낸다, python에서 data 변수에 들어감\n\n//     //             let data = JSON.parse(msg)\n//     //             let ur = data.user\n//     //             let hr = data.heartrate\n//     //             let rp = data.resp\n//     //             let tp = data.temp\n\n//     //             console.log(ur)\n//     //             console.log(hr)\n//     //             console.log(rp)\n//     //             console.log(tp)\n\n//     //             // module.exports = {\n//     //             //     ur, hr, rp, tp\n//     //             // };\n\n//     //         });\n//     client.on('message', msg => { \n//         console.log('Received message from client!',JSON.parse(msg));\n//         let data = JSON.parse(msg)\n//         let ur = data.user\n//         let hr = data.heartrate\n//         let rp = data.resp\n//         let tp = data.temp\n\n//         console.log(ur)\n//         console.log(hr)\n//         console.log(rp)\n//         console.log(tp)\n//     });\n//     // client.on('disconnect',function(){\n//     //     clearInterval(interval);\n//     //     console.log('Server has disconnected');\n//     // });\n\n// });\n\n// import SockJS from 'sockjs-client'\n// const Stomp = require('stompjs');\n// let stompClient;\n\n// const connect = (event) => {\n\n//     if(1) {//'ws://localhost:8080/ws'\n//       var socket = new SockJS('ws://localhost:8080');\n//       stompClient.current = Stomp.over(socket);\n//       stompClient.current.connect({}, () => {\n//         setTimeout(function() {\n//           onConnected()\n//         }, 500)\n//       })\n//     }\n\n// }\nconst express = require('express');\nconst path = require('path');\nconst app = express();\nconst http = require('http');\nconst port = 8080;\n\n// const WebSocket = require('ws');\n// const wss = new WebSocket.Server({ port:8080 });\nconst WebSocket = require('ws');\nconst ws = new WebSocket.Server({\n  port: 8080\n});\nws.on('connection', socket => {\n  console.log(\"Connected to Browser\");\n  // socket.on('close', () => {\n  //     console.log(\"Disconnected from the browser\");\n  // });\n  socket.on('message', msg => {\n    console.log(\"receive from client: \", JSON.parse(msg));\n    socket.send(\"send to client: echo \" + JSON.parse(msg)); // python 으로 데이터 보낸다, python에서 data 변수에 들어감\n  });\n});\n// wss.on('connection', ws => {\n//     ws.on('message', msg => {\n//         console.log(\"receive from client: \", JSON.parse(msg))\n//         ws.send(\"send to client: echo \", JSON.parse(msg)) // python 으로 데이터 보낸다, python에서 data 변수에 들어감\n\n//         let data = JSON.parse(msg)\n//         let ur = data.user\n//         let hr = data.heartrate\n//         let rp = data.resp\n//         let tp = data.temp\n\n//         console.log(ur)\n//         console.log(hr)\n//         console.log(rp)\n//         console.log(tp)\n\n//         // module.exports = {\n//         //     ur, hr, rp, tp\n//         // };\n\n//     });\n//     ws.on('close', ()=> {\n//         console.log('disconnected');\n//     });\n\n// });\n\nexport { ws };","map":{"version":3,"names":["express","require","path","app","http","port","WebSocket","ws","Server","on","socket","console","log","msg","JSON","parse","send"],"sources":["C:/Users/user/Downloads/hpe-example-main/hpe-example-main/my-app/src/Components/detail/server.js"],"sourcesContent":["// const app = require('express')()\r\n// const server = require('http').createServer(app)\r\n// const io = require('socket.io')(server)\r\n\r\n// io.on('connection', socket => {\r\n//     socket.on('message', msg => {\r\n//         console.log(msg)\r\n//         console.log(\"receive from client: \", JSON.parse(msg))\r\n//         ws.send(\"send to client: echo \", JSON.parse(msg)) // python 으로 데이터 보낸다, python에서 data 변수에 들어감\r\n    \r\n//         let data = JSON.parse(msg)\r\n//         let ur = data.user\r\n//         let hr = data.heartrate\r\n//         let rp = data.resp\r\n//         let tp = data.temp\r\n    \r\n//         console.log(ur)\r\n//         console.log(hr)\r\n//         console.log(rp)\r\n//         console.log(tp)\r\n//     })\r\n// })\r\n// server.listen(8080)\r\n\r\n// // Require HTTP module (to start server) and Socket.IO\r\n// var http = require('http');\r\n// io = require('socket.io');\r\n\r\n// // Start the server at port 8080\r\n// let express = require('express')\r\n// const app = express()\r\n// const server = http.createServer(app)\r\n// // var server = http.createServer(function(req, res){ \r\n//     // Send HTML headers and message\r\n//     // res.writeHead(200,{ 'Content-Type': 'text/html' }); \r\n//     // res.end('<h1>Hello Socket Lover!</h1>');\r\n// // });\r\n// server.listen(8080);\r\n\r\n// // Create a Socket.IO instance, passing it our server\r\n// var socket = io(server);\r\n\r\n// // Add a connect listener\r\n// socket.on('connection', function(client){ \r\n//     // Success!  Now listen to messages to be received\r\n//     // client.on('message', msg => {\r\n//     //             console.log(\"receive from client: \", JSON.parse(msg))\r\n//     //             ws.send(\"send to client: echo \", JSON.parse(msg)) // python 으로 데이터 보낸다, python에서 data 변수에 들어감\r\n            \r\n//     //             let data = JSON.parse(msg)\r\n//     //             let ur = data.user\r\n//     //             let hr = data.heartrate\r\n//     //             let rp = data.resp\r\n//     //             let tp = data.temp\r\n            \r\n//     //             console.log(ur)\r\n//     //             console.log(hr)\r\n//     //             console.log(rp)\r\n//     //             console.log(tp)\r\n                \r\n//     //             // module.exports = {\r\n//     //             //     ur, hr, rp, tp\r\n//     //             // };\r\n            \r\n//     //         });\r\n//     client.on('message', msg => { \r\n//         console.log('Received message from client!',JSON.parse(msg));\r\n//         let data = JSON.parse(msg)\r\n//         let ur = data.user\r\n//         let hr = data.heartrate\r\n//         let rp = data.resp\r\n//         let tp = data.temp\r\n    \r\n//         console.log(ur)\r\n//         console.log(hr)\r\n//         console.log(rp)\r\n//         console.log(tp)\r\n//     });\r\n//     // client.on('disconnect',function(){\r\n//     //     clearInterval(interval);\r\n//     //     console.log('Server has disconnected');\r\n//     // });\r\n\r\n// });\r\n\r\n// import SockJS from 'sockjs-client'\r\n// const Stomp = require('stompjs');\r\n// let stompClient;\r\n\r\n// const connect = (event) => {\r\n  \r\n//     if(1) {//'ws://localhost:8080/ws'\r\n//       var socket = new SockJS('ws://localhost:8080');\r\n//       stompClient.current = Stomp.over(socket);\r\n//       stompClient.current.connect({}, () => {\r\n//         setTimeout(function() {\r\n//           onConnected()\r\n//         }, 500)\r\n//       })\r\n//     }\r\n  \r\n// }\r\nconst express = require('express');\r\nconst path = require('path');\r\nconst app = express();\r\nconst http = require('http');\r\nconst port = 8080;\r\n\r\n// const WebSocket = require('ws');\r\n// const wss = new WebSocket.Server({ port:8080 });\r\nconst WebSocket = require('ws');\r\nconst ws = new WebSocket.Server({ port:8080 });\r\n\r\nws.on('connection', (socket) => {\r\n    console.log(\"Connected to Browser\");\r\n    // socket.on('close', () => {\r\n    //     console.log(\"Disconnected from the browser\");\r\n    // });\r\n    socket.on('message', (msg) => {\r\n        console.log(\"receive from client: \", JSON.parse(msg))\r\n        socket.send(\"send to client: echo \" + JSON.parse(msg)) // python 으로 데이터 보낸다, python에서 data 변수에 들어감\r\n    });\r\n});\r\n// wss.on('connection', ws => {\r\n//     ws.on('message', msg => {\r\n//         console.log(\"receive from client: \", JSON.parse(msg))\r\n//         ws.send(\"send to client: echo \", JSON.parse(msg)) // python 으로 데이터 보낸다, python에서 data 변수에 들어감\r\n    \r\n//         let data = JSON.parse(msg)\r\n//         let ur = data.user\r\n//         let hr = data.heartrate\r\n//         let rp = data.resp\r\n//         let tp = data.temp\r\n    \r\n//         console.log(ur)\r\n//         console.log(hr)\r\n//         console.log(rp)\r\n//         console.log(tp)\r\n        \r\n//         // module.exports = {\r\n//         //     ur, hr, rp, tp\r\n//         // };\r\n    \r\n//     });\r\n//     ws.on('close', ()=> {\r\n//         console.log('disconnected');\r\n//     });\r\n\r\n// });\r\n\r\nexport { ws };"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAME,GAAG,GAAGH,OAAO,EAAE;AACrB,MAAMI,IAAI,GAAGH,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMI,IAAI,GAAG,IAAI;;AAEjB;AACA;AACA,MAAMC,SAAS,GAAGL,OAAO,CAAC,IAAI,CAAC;AAC/B,MAAMM,EAAE,GAAG,IAAID,SAAS,CAACE,MAAM,CAAC;EAAEH,IAAI,EAAC;AAAK,CAAC,CAAC;AAE9CE,EAAE,CAACE,EAAE,CAAC,YAAY,EAAGC,MAAM,IAAK;EAC5BC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;EACnC;EACA;EACA;EACAF,MAAM,CAACD,EAAE,CAAC,SAAS,EAAGI,GAAG,IAAK;IAC1BF,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEE,IAAI,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;IACrDH,MAAM,CAACM,IAAI,CAAC,uBAAuB,GAAGF,IAAI,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC,EAAC;EAC3D,CAAC,CAAC;AACN,CAAC,CAAC;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,SAASN,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}