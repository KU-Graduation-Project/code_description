{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Downloads\\\\hpe-modify\\\\hpe-example-main\\\\my-app\\\\src\\\\Components\\\\section0\\\\Section0.js\";\nimport React from \"react\";\nimport Nav from 'C:/Users/user/Downloads/hpe-modify/hpe-example-main/my-app/src/Components/nav/Nav';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Select(_ref) {\n  let {\n    value,\n    setValue,\n    options\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    // 텍스트 인풋과 동일하게 받은 props를 설정해 값 넘겨주도록 설정\n    value: value,\n    onChange: e => {\n      setValue(e.target.value);\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"\",\n      disabled: true,\n      children: \"\\uC9C0\\uC5ED\\uC744 \\uC120\\uD0DD\\uD574\\uC8FC\\uC138\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), \"// \\uAC00\\uC838\\uC628 options\\uB85C \\uC140\\uB809\\uD2B8\\uAC12 \\uBFCC\\uB824\\uC8FC\\uAE30\", options.map(item =>\n    /*#__PURE__*/\n    // key값은 본래 고유의 아이디넘버와같은것으로 넘겨주어야 하나 간단히 만든것이므로 생략\n    _jsxDEV(\"option\", {\n      value: item,\n      children: item\n    }, item, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 7\n  }, this);\n}\n_c = Select;\nconst Section0 = () => {\n  return function TextInput(_ref2) {\n    let {\n      value,\n      setValue\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(\"input\", {\n      // value는 텍스트인풋에서 넘겨준 props\n      value: value,\n      type: \"text\"\n      // 값이 바뀔때를 감지하여 setValue값을 변경시켜주어 넘겨주자\n      ,\n      onChange: e => {\n        setValue(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }, this);\n  }\n\n  // <div className=\"section0\">\n  //     <Nav/>\n  //     <div className=\"section\">\n  //     <DialogInput\n  //         isDialogVisible={this.state.showAlert_changename}\n  //         message={'단속정 인원을 입력하세요'}\n  //         dialogStyle={{backgroundColor: 'white', borderRadius: 20}}\n  //         textInputProps={{\n  //             autoCorrect: false,\n  //             autoCapitalize: false,\n  //             maxLength: 10,\n  //         }}\n  //         hintInput={this.state.name}\n  //         initValueTextInput={\"\"}\n  //         submitText={'확인'}\n  //         cancelText={'취소'}\n  //         submitInput={(inputNumMem) => {\n  //             if (inputNumMem.trim()==\"\")\n  //                 Alert.alert('', '단속정 인원을 입력하세요(1 ~ 9명)');\n  //             else if(inputNumMem>9 || inputNumMem<1)\n  //                 Alert.alert('', '단속정 인원은 1 ~ 9명입니다');\n  //             else\n  //                 this.updateProfile(inputNumMem);\n  //         }}\n  //         closeDialog={() => {\n  //             this.setState({showAlert_changename: false});\n  //         }}\n  //         />\n  //     </div>\n  // </div>\n  ;\n};\n_c2 = Section0;\nexport default Section0;\nvar _c, _c2;\n$RefreshReg$(_c, \"Select\");\n$RefreshReg$(_c2, \"Section0\");","map":{"version":3,"names":["React","Nav","jsxDEV","_jsxDEV","Select","_ref","value","setValue","options","onChange","e","target","children","disabled","fileName","_jsxFileName","lineNumber","columnNumber","map","item","_c","Section0","TextInput","_ref2","type","_c2","$RefreshReg$"],"sources":["C:/Users/user/Downloads/hpe-modify/hpe-example-main/my-app/src/Components/section0/Section0.js"],"sourcesContent":["import React from \"react\";\nimport Nav from 'C:/Users/user/Downloads/hpe-modify/hpe-example-main/my-app/src/Components/nav/Nav';\n\n\nfunction Select({ value, setValue, options }) {\n    return (\n      <select\n        // 텍스트 인풋과 동일하게 받은 props를 설정해 값 넘겨주도록 설정\n        value={value}\n        onChange={(e) => {\n          setValue(e.target.value);\n        }}\n      >\n        <option value=\"\" disabled>\n          지역을 선택해주세요.\n        </option>\n        // 가져온 options로 셀렉트값 뿌려주기\n        {options.map((item) => (\n          // key값은 본래 고유의 아이디넘버와같은것으로 넘겨주어야 하나 간단히 만든것이므로 생략\n          <option key={item} value={item}>\n            {item}\n          </option>\n        ))}\n      </select>\n    );\n  }\n\nconst Section0 = () => {\n    return (\n        function TextInput({ value, setValue }) {\n            return (\n              <input\n                // value는 텍스트인풋에서 넘겨준 props\n                value={value}\n                type=\"text\"\n                // 값이 바뀔때를 감지하여 setValue값을 변경시켜주어 넘겨주자\n                onChange={(e) => {\n                  setValue(e.target.value);\n                }}\n              />\n            );\n          }\n          \n        // <div className=\"section0\">\n        //     <Nav/>\n        //     <div className=\"section\">\n        //     <DialogInput\n        //         isDialogVisible={this.state.showAlert_changename}\n        //         message={'단속정 인원을 입력하세요'}\n        //         dialogStyle={{backgroundColor: 'white', borderRadius: 20}}\n        //         textInputProps={{\n        //             autoCorrect: false,\n        //             autoCapitalize: false,\n        //             maxLength: 10,\n        //         }}\n        //         hintInput={this.state.name}\n        //         initValueTextInput={\"\"}\n        //         submitText={'확인'}\n        //         cancelText={'취소'}\n        //         submitInput={(inputNumMem) => {\n        //             if (inputNumMem.trim()==\"\")\n        //                 Alert.alert('', '단속정 인원을 입력하세요(1 ~ 9명)');\n        //             else if(inputNumMem>9 || inputNumMem<1)\n        //                 Alert.alert('', '단속정 인원은 1 ~ 9명입니다');\n        //             else\n        //                 this.updateProfile(inputNumMem);\n        //         }}\n        //         closeDialog={() => {\n        //             this.setState({showAlert_changename: false});\n        //         }}\n        //         />\n        //     </div>\n        // </div>\n    )\n}\n\nexport default Section0"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,mFAAmF;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGpG,SAASC,MAAMA,CAAAC,IAAA,EAA+B;EAAA,IAA9B;IAAEC,KAAK;IAAEC,QAAQ;IAAEC;EAAQ,CAAC,GAAAH,IAAA;EACxC,oBACEF,OAAA;IACE;IACAG,KAAK,EAAEA,KAAM;IACbG,QAAQ,EAAGC,CAAC,IAAK;MACfH,QAAQ,CAACG,CAAC,CAACC,MAAM,CAACL,KAAK,CAAC;IAC1B,CAAE;IAAAM,QAAA,gBAEFT,OAAA;MAAQG,KAAK,EAAC,EAAE;MAACO,QAAQ;MAAAD,QAAA,EAAC;IAE1B;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,yFAET,EAACT,OAAO,CAACU,GAAG,CAAEC,IAAI;IAAA;IAChB;IACAhB,OAAA;MAAmBG,KAAK,EAAEa,IAAK;MAAAP,QAAA,EAC5BO;IAAI,GADMA,IAAI;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAGlB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACK;AAEb;AAACG,EAAA,GArBMhB,MAAM;AAuBf,MAAMiB,QAAQ,GAAGA,CAAA,KAAM;EACnB,OACI,SAASC,SAASA,CAAAC,KAAA,EAAsB;IAAA,IAArB;MAAEjB,KAAK;MAAEC;IAAS,CAAC,GAAAgB,KAAA;IAClC,oBACEpB,OAAA;MACE;MACAG,KAAK,EAAEA,KAAM;MACbkB,IAAI,EAAC;MACL;MAAA;MACAf,QAAQ,EAAGC,CAAC,IAAK;QACfH,QAAQ,CAACG,CAAC,CAACC,MAAM,CAACL,KAAK,CAAC;MAC1B;IAAE;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACF;EAEN;;EAEF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAER,CAAC;AAAAQ,GAAA,GA/CKJ,QAAQ;AAiDd,eAAeA,QAAQ;AAAA,IAAAD,EAAA,EAAAK,GAAA;AAAAC,YAAA,CAAAN,EAAA;AAAAM,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}